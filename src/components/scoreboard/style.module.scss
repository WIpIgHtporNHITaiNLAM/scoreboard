.main {
  display: flex;
  z-index: 2;
}

.container {
  display: flex;
  height: 3.5rem;
  margin: 4em;
  overflow: hidden;
}

.score,
.teamShortName {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 7rem;
  flex-shrink: 0;
}

.score {
  font-size: 2rem;
  font-weight: 800;
  background: #03133e;
  z-index: 10;
}

.teamShortName {
  font-size: 1.75rem;
  font-weight: 700;
  background: #ccc;
  position: relative;
  z-index: 9;
}

.teamShortName::after {
  content: '';
  position: absolute;
  right: 0;
  background: rgba(0, 0, 0, 0.2);
  height: 100%;
  width: 0.5em;
}

.away::after {
  right: auto;
  left: 0;
}

.clock {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 0.75em;
  font-size: 2rem;
  font-weight: 700;
  background: #03133e;
  transform-origin: left;
  z-index: 8;
}

.teamStat,
.clockWrapper {
  display: flex;
}

.teamStatWrapper {
  display: flex;
}

.teamInfo {
  display: flex;
  align-items: center;
  background: #c2c2c2;
  z-index: 7;
}

.teamName {
  font-size: 2rem;
  font-weight: 800;
  padding: 0 0.75em;
  border-left: solid 1px white;
  height: 100%;
  display: flex;
  align-items: center;
}

.logo {
  max-width: 2.5rem;
  margin: 0 1.5em;
}

.stat {
  background: #03133e;
  display: flex;
  align-items: center;
  padding: 0 1.5em;
}

.statName {
  font-size: 1.5rem;
}

.count {
  font-size: 2rem;
  font-weight: 800;
  margin-left: 0.75em;
}

.home,
.home.teamShortName span {
  transform-origin: right;
}

.away {
  transform-origin: left;
}

button {
  font-size: 1.5rem;
  margin: 0 1em;
}

// Animation

@mixin animation(
  $animateContainer,
  $active: false,
  $inactive: false,
  $enterTransition: false,
  $exitTransition: false
) {
  @at-root {
    $root: &;

    @if ($inactive) {
      #{$root} {
        @each $prop, $value in $inactive {
          #{$prop}: $value;
        }
      }
    }

    @if ($exitTransition) {
      #{$root} {
        @each $prop, $value in $exitTransition {
          #{$prop}: $value;
        }
      }
    }

    #{$animateContainer} & {
      @if ($active) {
        @each $prop, $value in $active {
          #{$prop}: $value;
        }
      }

      @if ($enterTransition) {
        @each $prop, $value in $enterTransition {
          #{$prop}: $value;
        }
      }
    }
  }
}

.score {
  @include animation(
    $animateContainer: '.mainAnimate',
    $active: (
      transform: scaleX(1)
    ),
    $inactive: (
      transform: scaleX(0)
    ),
    $enterTransition: (
      transition: transform 600ms ease-out 0ms
    ),
    $exitTransition: (
      transition: transform 600ms ease-out 1200ms
    )
  );
}

.score span {
  @include animation(
    $animateContainer: '.mainAnimate',
    $active: (
      opacity: 1,
      transform: scale(1)
    ),
    $inactive: (
      transform: scaleX(2.5) scaleY(1.5),
      opacity: 0
    ),
    $enterTransition: (
      transition: (
        all 600ms ease-out 200ms
      )
    ),
    $exitTransition: (
      transition: all 700ms ease-out 1000ms
    )
  );
}

.teamShortName {
  @include animation(
    $animateContainer: '.mainAnimate',
    $active: (
      transform: scaleX(1)
    ),
    $inactive: (
      transform: scaleX(0)
    ),
    $enterTransition: (
      transition: transform 400ms ease-out 600ms
    ),
    $exitTransition: (
      transition: transform 400ms ease-out 600ms
    )
  );
}

.clock {
  @include animation(
    $animateContainer: '.mainAnimate',
    $active: (
      transform: translateX(0px),
      opacity: 1
    ),
    $inactive: (
      transform: translateX(-100%),
      opacity: 0
    ),
    $enterTransition: (
      transition: (
        transform 600ms ease-out 1200ms,
        opacity 1ms ease-out 1199ms
      )
    ),
    $exitTransition: (
      transition: (
        transform 600ms ease-out 0ms,
        opacity 1ms ease-out 599ms
      )
    )
  );

  @include animation(
    $animateContainer: '.teamStatAnimate',
    $active: (
      transform: translateX(-100%),
      opacity: 0
    ),
    $enterTransition: (
      transition: (
        all 600ms ease-out 0ms,
        opacity 1ms ease-out 599ms
      )
    )
  );
}

.teamInfo {
  @include animation(
    $animateContainer: '.mainAnimate',
    $active: (
      transform: translateX(calc(-100% - 145px)),
      opacity: 0
    ),
    $enterTransition: (
      transition: (
        transform 600ms ease-out 600ms,
        opacity 1ms ease-out 1199ms
      )
    )
  );

  @include animation(
    $animateContainer: '.teamStatAnimate',
    $active: (
      transform: translateX(-145px),
      opacity: 1
    ),
    $inactive: (
      transform: translateX(calc(-100% - 145px)),
      opacity: 0
    ),
    $enterTransition: (
      transition: (
        transform 600ms ease-out 600ms,
        opacity 1ms ease-out 599ms
      )
    ),
    $exitTransition: (
      transition: transform 600ms ease-out 0ms
    )
  );
}

.stat {
  @include animation(
    $animateContainer: '.mainAnimate',
    $active: (
      transform: translateX(calc(-100% - 145px)),
      opacity: 0
    ),
    $enterTransition: (
      transition: (
        transform 600ms ease-out 0ms,
        opacity 1ms ease-out 599ms
      )
    )
  );

  @include animation(
    $animateContainer: '.teamStatAnimate',
    $active: (
      transform: translateX(-145px),
      opacity: 1
    ),
    $inactive: (
      transform: translateX(calc(-100% - 145px)),
      opacity: 0
    ),
    $enterTransition: (
      transition: (
        transform 600ms ease-out 1200ms,
        opacity 1ms ease-out 1201ms
      )
    ),
    $exitTransition: (
      transition: transform 600ms ease-out 0ms
    )
  );
}
